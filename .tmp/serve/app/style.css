/**
 *  Do not remove this comments bellow. It's the markers used by wiredep to inject
 *  sass dependencies when defined in the bower.json of your dependencies
 */
/**
 *  Do not remove this comments bellow. It's the markers used by gulp-inject to inject
 *  all your sass files automatically
 */
.index__main-container {
  height: 100% !important;
  /* start 'enter' transition */
  /* end 'enter' transition */ }
  .index__main-container.ng-enter {
    transition: 0.75s;
    /* start with opacity 0 (invisible) */
    opacity: 0; }
  .index__main-container.ng-enter-active {
    /* end with opacity 1 (fade in) */
    opacity: 1; }
  .index__main-container.ng-leave {
    transition: 0.75s;
    opacity: 1; }
  .index__main-container.ng-leave-active {
    opacity: 0; }

.btn_facebook-box > ng-md-icon {
  height: 32px;
  width: 32px; }
  .btn_facebook-box > ng-md-icon.log-out {
    padding-left: 5px; }

.main__container-content {
  padding: 24px 24px 0;
  background: url("../asset/images/bg_rain.jpg");
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-position: center;
  background-size: cover; }
  @media screen and (max-width: 960px) {
    .main__container-content {
      padding: 16px 16px 0; } }

md-content.quotes_container {
  background-color: rgba(250, 250, 250, 0.6); }

div.navbar md-toolbar {
  padding-left: 20px !important;
  padding-right: 20px !important; }

.btn_facebook-box {
  background-color: steelblue;
  text-align: left;
  color: white;
  line-height: 1; }
  .btn_facebook-box--content {
    padding-top: 2px;
    padding-left: 5px;
    padding-right: 5px; }

.log-in--greeting {
  color: steelblue; }

html,
body {
  overflow: auto; }
  html ::-webkit-scrollbar,
  body ::-webkit-scrollbar {
    display: none !important; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLnNjc3MiLCJtb2R1bGVzL2luZGV4LnNjc3MiLCJtb2R1bGVzL2xvZ2luLnNjc3MiLCJtb2R1bGVzL21haW4uc2NzcyIsIm1vZHVsZXMvbmF2aWdhdGlvbi5zY3NzIiwiaW5jbHVkZXMvYmFzZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRztBQVVIOzs7R0FHRztBQ2hCSDtFQUVRLHdCQUFzQjtFQUN0Qiw4QkFBOEI7RUFNOUIsNEJBQTRCLEVBWS9CO0VBckJMO0lBS1ksa0JBQWtCO0lBQ2xCLHNDQUFzQztJQUN0QyxXQUFXLEVBQ2Q7RUFSVDtJQVdZLGtDQUFrQztJQUNsQyxXQUFXLEVBQ2Q7RUFiVDtJQWVZLGtCQUFrQjtJQUNsQixXQUFXLEVBQ2Q7RUFqQlQ7SUFtQlksV0FBVyxFQUNkOztBQ3BCVDtFQUNRLGFBQWE7RUFDYixZQUFZLEVBSWY7RUFOZTtJQUlSLGtCQUFrQixFQUNyQjs7QUNMVDtFQUdNLHFCQUFxQjtFQU1yQiwrQ0FBZTtFQUNmLDZCQUE2QjtFQUM3Qiw2QkFBNkI7RUFDN0IsNEJBQTRCO0VBSTVCLHVCQUF1QixFQUN4QjtFQVpDO0lBTE47TUFNUSxxQkFBcUIsRUFXeEIsRUFBQTs7QUFJSztFQUNSLDJDQUFzQixFQUN2Qjs7QUNwQks7RUFDQSw4QkFBOEI7RUFDOUIsK0JBQStCLEVBQ2hDOztBQUlMO0VBQ0UsNEJBQTRCO0VBQzVCLGlCQUFpQjtFQUNqQixhQUFhO0VBQ2IsZUFBZSxFQU9oQjtFQVhEO0lBT0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixtQkFBbUIsRUFDcEI7O0FBR0g7RUFDRSxpQkFBaUIsRUFDbEI7O0FDekJEOztFQUVJLGVBQWUsRUFJbEI7RUFISzs7SUFDRSx5QkFBdUIsRUFDMUIiLCJmaWxlIjoic3R5bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiAgRG8gbm90IHJlbW92ZSB0aGlzIGNvbW1lbnRzIGJlbGxvdy4gSXQncyB0aGUgbWFya2VycyB1c2VkIGJ5IHdpcmVkZXAgdG8gaW5qZWN0XG4gKiAgc2FzcyBkZXBlbmRlbmNpZXMgd2hlbiBkZWZpbmVkIGluIHRoZSBib3dlci5qc29uIG9mIHlvdXIgZGVwZW5kZW5jaWVzXG4gKi9cblxuXG4vL2ltcG9ydCBkZXBlbmRlbmNpZXNcbkBpbXBvcnQgXCIuLi8uLi8uLi9ib3dlcl9jb21wb25lbnRzL2JvdXJib24vYXBwL2Fzc2V0cy9zdHlsZXNoZWV0cy9ib3VyYm9uXCI7XG5cbi8vIGltcG9ydCB2YXJpYWJsZXNcbkBpbXBvcnQgXCJpbmNsdWRlcy92YXJpYWJsZXNcIjtcblxuXG4vKipcbiAqICBEbyBub3QgcmVtb3ZlIHRoaXMgY29tbWVudHMgYmVsbG93LiBJdCdzIHRoZSBtYXJrZXJzIHVzZWQgYnkgZ3VscC1pbmplY3QgdG8gaW5qZWN0XG4gKiAgYWxsIHlvdXIgc2FzcyBmaWxlcyBhdXRvbWF0aWNhbGx5XG4gKi9cbi8vIGluamVjdG9yXG5AaW1wb3J0IFwibW9kdWxlcy9pbmRleC5zY3NzXCI7XG5AaW1wb3J0IFwibW9kdWxlcy9sb2dpbi5zY3NzXCI7XG5AaW1wb3J0IFwibW9kdWxlcy9tYWluLnNjc3NcIjtcbkBpbXBvcnQgXCJtb2R1bGVzL25hdmlnYXRpb24uc2Nzc1wiO1xuQGltcG9ydCBcImluY2x1ZGVzL2Jhc2Uuc2Nzc1wiO1xuLy8gZW5kaW5qZWN0b3JcbiIsIi5pbmRleCB7XG4gICAgJl9fbWFpbi1jb250YWluZXIge1xuICAgICAgICBoZWlnaHQ6IDEwMCUhaW1wb3J0YW50O1xuICAgICAgICAvKiBzdGFydCAnZW50ZXInIHRyYW5zaXRpb24gKi9cbiAgICAgICAgJi5uZy1lbnRlciB7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiAwLjc1cztcbiAgICAgICAgICAgIC8qIHN0YXJ0IHdpdGggb3BhY2l0eSAwIChpbnZpc2libGUpICovXG4gICAgICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICB9XG4gICAgICAgIC8qIGVuZCAnZW50ZXInIHRyYW5zaXRpb24gKi9cbiAgICAgICAgJi5uZy1lbnRlci1hY3RpdmUge1xuICAgICAgICAgICAgLyogZW5kIHdpdGggb3BhY2l0eSAxIChmYWRlIGluKSAqL1xuICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgfVxuICAgICAgICAmLm5nLWxlYXZlIHtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IDAuNzVzO1xuICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgfVxuICAgICAgICAmLm5nLWxlYXZlLWFjdGl2ZSB7XG4gICAgICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICB9XG4gICAgfVxufSIsIi5idG5fZmFjZWJvb2stYm94ID4gbmctbWQtaWNvbntcbiAgICAgICAgaGVpZ2h0OiAzMnB4O1xuICAgICAgICB3aWR0aDogMzJweDtcbiAgICAgICAmLmxvZy1vdXR7XG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDVweDtcbiAgICAgICAgfVxuICAgIH1cbiIsIi5tYWluIHtcclxuICAmX19jb250YWluZXIge1xyXG4gICAgJi1jb250ZW50IHtcclxuICAgICAgcGFkZGluZzogMjRweCAyNHB4IDA7XHJcblxyXG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5NjBweCkge1xyXG4gICAgICAgIHBhZGRpbmc6IDE2cHggMTZweCAwO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9hc3NldC9pbWFnZXMvYmdfcmFpbi5qcGdcIik7XHJcbiAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQ7XHJcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgICAgLXdlYmtpdC1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgICAtbW96LWJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICAgIC1vLWJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5tZC1jb250ZW50LnF1b3Rlc19jb250YWluZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjUwLDI1MCwyNTAsMC42KTtcclxufVxyXG4iLCJcclxuZGl2IHtcclxuICAmLm5hdmJhciB7XHJcbiAgICAmIG1kLXRvb2xiYXIge1xyXG4gICAgICBwYWRkaW5nLWxlZnQ6IDIwcHggIWltcG9ydGFudDtcclxuICAgICAgcGFkZGluZy1yaWdodDogMjBweCAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmJ0bl9mYWNlYm9vay1ib3gge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHN0ZWVsYmx1ZTtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBsaW5lLWhlaWdodDogMTtcclxuXHJcbiAgJi0tY29udGVudCB7XHJcbiAgICBwYWRkaW5nLXRvcDogMnB4O1xyXG4gICAgcGFkZGluZy1sZWZ0OiA1cHg7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiA1cHg7XHJcbiAgfVxyXG59XHJcblxyXG4ubG9nLWluLS1ncmVldGluZyB7XHJcbiAgY29sb3I6IHN0ZWVsYmx1ZTtcclxufVxyXG4iLCJodG1sLFxuYm9keSB7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgJiA6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICAgICAgZGlzcGxheTogbm9uZSFpbXBvcnRhbnQ7XG4gICAgfVxufSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */